name: elk-example
services:
  elasticsearch:
    build:
      args:
        ELK_VERSION: $ELK_VERSION
      context: elasticsearch/
    debug:
      volumes:
        volume:
          host_path: ./elasticsearch/config/elasticsearch.yml
          mount_path: /usr/share/elasticsearch/config/elasticsearch.yml
          readonly: true
        volume2:
          mount_path: /usr/share/elasticsearch/data
    interfaces:
      main:
        port: 9200
      main2:
        port: 9300
    environment:
      ES_JAVA_OPTS: '-Xmx256m -Xms256m'
      ELASTIC_PASSWORD: changeme
      DISCOVERY_TYPE: single-node
      ELASTIC_DISCOVERY_TYPE: single-node
    reserved_name: elasticsearch
  logstash:
    build:
      args:
        ELK_VERSION: $ELK_VERSION
      context: logstash/
    debug:
      volumes:
        volume:
          host_path: ./logstash/config/logstash.yml
          mount_path: /usr/share/logstash/config/logstash.yml
          readonly: true
        volume2:
          host_path: ./logstash/pipeline
          mount_path: /usr/share/logstash/pipeline
          readonly: true
    interfaces:
      main:
        protocol: tcp
        port: 5000
      main2:
        protocol: udp
        port: 5000
      main3:
        port: 9600
    environment:
      LS_JAVA_OPTS: '-Xmx256m -Xms256m'
      ELASTICSEARCH_URL: ${{ services.elasticsearch.interfaces.main.url }}
    depends_on:
      - elasticsearch
    reserved_name: logstash
  kibana:
    build:
      args:
        ELK_VERSION: $ELK_VERSION
      context: kibana/
    debug:
      volumes:
        volume:
          host_path: ./kibana/config/kibana.yml
          mount_path: /usr/share/kibana/config/kibana.yml
          readonly: true
    interfaces:
      main:
        port: 5601
    depends_on:
      - elasticsearch
    reserved_name: kibana
    environment:
      ELASTICSEARCH_URL: ${{ services.elasticsearch.interfaces.main.url }}
